----bd_gdoth租户脚本----
DROP TABLE IF EXISTS NG3.TR_BASS_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_BASS_PRDCT (
   BASS_PRDCT_CD    STRING,
   BASS_PRDCT_NAM    STRING,
   BRND_CD    SMALLINT,
   PRDCT_TYP_IND    STRING,
   BRND_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_3G_IMEI;
CREATE EXTERNAL TABLE NG3.TR_3G_IMEI (
   TM_INTRVL_CD    BIGINT,
   IMEI    STRING,
   TD_TYP_CD    SMALLINT,
   TERM_TYP_CD    STRING
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TT_BUSI_TYP;
CREATE EXTERNAL TABLE NG3.TT_BUSI_TYP (
   BUSI_CD    STRING,
   TRSF_TYP    STRING,
   EFF_TIME    STRING,
   END_TIME    STRING,
   EFF_FLAG    STRING,
   COOPR_CD    STRING,
   S_BUSI_CD    STRING,
   BUSI_TYP_CD    INT,
   SUB_BUSI_TYP_CD    INT,
   S_BUSI_AREA_CD    STRING,
   BUSI_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_BUSI_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_BUSI;
CREATE EXTERNAL TABLE NG3.TT_BUSI (
   S_BUSI_CD    STRING,
   TRSF_TYP    STRING,
   EFF_TIME    STRING,
   S_BUSI_NAME    STRING,
   D_BUSI_TYP_CD    INT,
   EFF_FLAG    STRING,
   END_TIME    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_BUSI ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_PRDCT_YJ_TAX;
CREATE EXTERNAL TABLE NG3.TR_PRDCT_YJ_TAX (
   YJ_PRD_CODE    STRING,
   PRDCT_TAX_RT    DECIMAL(10,4)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_PRDCT_YJ_TAX ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_PRDCT_BOSS_TAX;
CREATE EXTERNAL TABLE NG3.TR_PRDCT_BOSS_TAX (
   BASS_PRDCT_CD    STRING,
   PRDCT_TAX_RT    DECIMAL(10,4)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_PRDCT_BOSS_TAX ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_BOSS_REF;
CREATE EXTERNAL TABLE NG3.TT_BOSS_REF (
   DIM_CD    INT,
   CMCC_BRANCH_CD    STRING,
   S_CD    STRING,
   D_CD    STRING,
   S_CD_DESC    STRING,
   D_CD_DESC    STRING,
   UPD_DATE    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_BOSS_REF ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_IMEI_TAC;
CREATE EXTERNAL TABLE NG3.TT_IMEI_TAC (
   TAC    STRING,
   IMEI_TERM_CD    INT,
   DATASOURCE_CD    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_BRND;
CREATE EXTERNAL TABLE NG3.TR_BRND (
   BRND_CD    SMALLINT,
   BRND_NAM    STRING,
   BRND_EFF_DT    STRING,
   BRND_END_DT    STRING,
   COOPR_CD    STRING,
   CMPT_FLAG_IND    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_BRND ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_PERS_PRDCT_PKG_DTL;
CREATE EXTERNAL TABLE NG3.TR_PERS_PRDCT_PKG_DTL (
   PRDCT_CD    STRING,
   PKG_DTL_CD    INT,
   REL_TYP_CD    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_PERS_PRDCT_PKG_DTL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_PKG_DTL;
CREATE EXTERNAL TABLE NG3.TR_PKG_DTL (
   PKG_DTL_CD    INT,
   PKG_CD    SMALLINT,
   BRND_CD    SMALLINT,
   PKG_DTL_FEE_AMT    DECIMAL(7,2),
   PKG_NAM    STRING,
   PKG_DTL_NAM    STRING,
   PKG_TYP_CD    SMALLINT,
   PKG_TYP_NAM    STRING,
   PKG_KIND_NAM    STRING,
   A4G_PKG_IND    STRING,
   V_TYP_CD_1    SMALLINT,
   V_TYP_NAM_1    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_PKG_DTL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_NB_GPRS_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_NB_GPRS_PRDCT (
   BASS_PRDCT_CD    STRING,
   BASS_PRDCT_NAM    STRING,
   PKG_KIND_CD    SMALLINT,
   GPRS_PKG_TYP_CD    SMALLINT,
   GPRS_PKG_TYP_DTL_CD    INT,
   GPRS_PKG_TM_TYP_CD    SMALLINT,
   GPRS_PKG_TYP_NAM    STRING,
   GPRS_PKG_TYP_DTL_NAM    STRING,
   GPRS_PKG_COMMON_FLUX    BIGINT,
   GPRS_PKG_TD_FLUX    BIGINT,
   GPRS_PKG_TDLTE_FLUX    BIGINT,
   GPRS_PKG_IDLE_FLUX    BIGINT,
   GPRS_PKG_FEE    DECIMAL(12,2),
   PRDCT_FEE    DECIMAL(16,2),
   FLUX_MAIN_PKG_IND    SMALLINT,
   PKG_SUPL_TYP_CD    SMALLINT,
   PKG_SUPL_TYP_NAM    STRING,
   V_TYP_CD_1    SMALLINT,
   V_TYP_NAM_1    STRING,
   MIX_PKG_IND    STRING,
   A4G_PKG_IND    STRING,
   A4G_MIX_PKG_IND    STRING,
   A4G_FLUX_PKG_IND    STRING,
   C_FLUX_PKG_IND    STRING,
   V_TYP_CD_2    SMALLINT,
   V_TYP_NAM_2    STRING,
   LC_FLUX_PKG_IND    STRING,
   PM_PKG_IND    STRING,
   SWYH_PRDCT_CD    STRING,
   CORP_PKG_IND    STRING,
   YEAR_PKG_IND    STRING,
   YEAR_PKG_NAM    STRING,
   WHPKG_CD    STRING,
   V_TYP_CD_3    SMALLINT,
   V_TYP_NAM_3    STRING,
   GIF_PRDCT_CD    STRING,
   GIF_PRDCT_NAM    STRING,
   GIF2_PRDCT_CD    STRING,
   V_TYP_CD_4    SMALLINT,
   V_TYP_NAM_4    STRING,
   SNACK_PKG_IND    STRING,
   EQUITY_PKG_IND    STRING,
   A4G_TK_PKG_IND    STRING,
   CHNL_MNTR_FLUX_PKG_IND    STRING,
   MON_FLUX_PKG_IND    STRING,
   TIM_LIMIT_PKG_IND    STRING,
   SR201708210015001_IND    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_NB_GPRS_PRDCT ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_CO_TYP;
CREATE EXTERNAL TABLE NG3.TT_CO_TYP (
   SP_SERV_CD    STRING,
   CO_TYP_CD    INT,
   REMARKS    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_CO_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_SJDCRM_BASS_OPRTORINFO;
CREATE EXTERNAL TABLE NG3.TR_SJDCRM_BASS_OPRTORINFO (
   OPR_ID    STRING,
   AREA_CD    STRING,
   OPR_NAM    STRING,
   BIRTHDAY    INT,
   WORK_DT    INT,
   GDR_TYP_CD    STRING,
   TRAIN_LVL    STRING,
   ED_TYP_CD    STRING,
   SKILL_LVL    STRING,
   TOT_LVL    STRING,
   COMITY_LVL    STRING,
   ID_NBR    STRING,
   OPR_TYP    STRING,
   NATIVEHOME    STRING,
   GRD_SCHL    STRING,
   GRD_DT    INT,
   MARRY_IND    STRING,
   POLITYFACE    STRING,
   HOME_ADDR    STRING,
   JOB_LIVE    STRING,
   NEW_PST_CD    STRING,
   BLOOD_TYP    STRING,
   HEALTHY    STRING,
   CHARACTER    STRING,
   INTREST    STRING,
   SOC_RELA    STRING,
   FAM_MBR    STRING,
   STAR_LVL    STRING,
   OPR_BUSI    STRING,
   HR_STS    STRING,
   TITLE    STRING,
   CMCC_BRANCH_CD    STRING,
   SPECIALTY    STRING,
   FAX    STRING,
   HOME_TEL    STRING,
   EMAIL    STRING,
   MOB_NBR    STRING,
   STS_CD    SMALLINT,
   CHNL_CD    STRING,
   OPR_STOP_DT    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_GD_AREA;
CREATE EXTERNAL TABLE NG3.TR_GD_AREA (
   AREA_CD    STRING,
   CMCC_BRANCH_CD    STRING,
   PRVC_CD    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_GD_AREA ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_BASS_CO_SIZE;
CREATE EXTERNAL TABLE NG3.TR_BASS_CO_SIZE (
   CO_SIZE_CD    STRING,
   CO_SIZE_NAM    STRING,
   CORP_SIZE_TYP_CD    SMALLINT,
   CORP_SIZE_TYP_NAM    STRING,
   DTGRP_AB_CD    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_BASS_CO_SIZE ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_BASS_UNIT_KIND;
CREATE EXTERNAL TABLE NG3.TR_BASS_UNIT_KIND (
   UNIT_KIND_CD    STRING,
   UNIT_KIND_NAM    STRING,
   CORP_TYP_CD    SMALLINT,
   CORP_TYP_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_BASS_UNIT_KIND ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CNSM_RNK;
CREATE EXTERNAL TABLE NG3.TR_CNSM_RNK (
   CNSM_RNK_CD    SMALLINT,
   CNSM_TYP_CD    SMALLINT,
   CNSM_RNK_LOW    DECIMAL(12,2),
   CNSM_RNK_HIGH    DECIMAL(12,2),
   CNSM_RNK1_CD    SMALLINT,
   CNSM_RNK1_NAM    STRING,
   CNSM_RNK2_CD    SMALLINT,
   CNSM_RNK2_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_CNSM_RNK ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_INNETTIME_RNK;
CREATE EXTERNAL TABLE NG3.TR_INNETTIME_RNK (
   INNET_MO_RNK_CD    SMALLINT,
   INNET_MO_LOW    SMALLINT,
   INNET_MO_HIGH    SMALLINT,
   INNET_MO_RNK_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_INNETTIME_RNK ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CORP_CMCC_TOWN;
CREATE EXTERNAL TABLE NG3.TR_CORP_CMCC_TOWN (
   CMCC_BRANCH_CD    STRING,
   CMCC_CNTRY_CD    STRING,
   CMCC_TOWN_CD    STRING,
   CMCC_TOWN_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_CORP_CMCC_TOWN ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_BASS_VOCATION_TYP2;
CREATE EXTERNAL TABLE NG3.TR_BASS_VOCATION_TYP2 (
   VOCATION_TYP2_CD    STRING,
   VOCATION_TYP2_NAM    STRING,
   INDUS_TYP2_CD    INT,
   INDUS_TYP2_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_BASS_VOCATION_TYP2 ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_BASS_VOCATION_TYP1;
CREATE EXTERNAL TABLE NG3.TR_BASS_VOCATION_TYP1 (
   VOCATION_TYP1_CD    STRING,
   VOCATION_TYP1_NAM    STRING,
   INDUS_TYP_CD    SMALLINT,
   INDUS_TYP_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_BASS_VOCATION_TYP1 ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_MEMBERCNT_RNK;
CREATE EXTERNAL TABLE NG3.TR_MEMBERCNT_RNK (
   MEMBERCNT_RNK_CD    SMALLINT,
   MEMBERCNT_LOW    SMALLINT,
   MEMBERCNT_HIGH    SMALLINT,
   MEMBERCNT_RNK_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_MEMBERCNT_RNK ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CORP_YJ_PRD_TYP;
CREATE EXTERNAL TABLE NG3.TR_CORP_YJ_PRD_TYP (
   YJ_PRD_CODE    STRING,
   YJ_PRD_NAM    STRING,
   TJ_TYP_NAM    STRING,
   YJ_FL_NAM    STRING,
   EJ_FL_NAM    STRING,
   CI_PRD_IND    STRING,
   PERS_INC_BL_CI_INC_IND    STRING,
   SORT_VAL    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_CORP_YJ_PRD_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_GFEE_TRANS;
CREATE EXTERNAL TABLE NG3.TT_GFEE_TRANS (
   BILL_ACCT_CD    STRING,
   BILL_ACCT_NAM    STRING,
   GFEE_TYP_CD    SMALLINT,
   GFEE_TYP_NAM    STRING,
   VOC_FEE_IND    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_GFEE_TRANS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_CORP_PRDCT_TRANS;
CREATE EXTERNAL TABLE NG3.TT_CORP_PRDCT_TRANS (
   BASS_PRDCT_CD    STRING,
   BASS_PRDCT_NAM    STRING,
   CORP_PRDCT_CODE    STRING,
   CORP_PRDCT_NAM    STRING,
   MBR_PRDCT_IND    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_CORP_PRDCT_TRANS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_YXKDB_NEWBUSI_NBR;
CREATE EXTERNAL TABLE NG3.TR_YXKDB_NEWBUSI_NBR (
   B_NBR    STRING,
   AREA_CD    STRING,
   CMCC_BRANCH_CD    STRING,
   BUSI_NAM    STRING,
   INDUS_NAM    STRING,
   B_NBR_NAM    STRING,
   B_NBR_DESC    STRING,
   B_NBR_ADD_DESC    STRING,
   AREA_AVAIL_IND    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_YXKDB_NEWBUSI_NBR ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_SALE_ECHNL;
CREATE EXTERNAL TABLE NG3.TR_TERM_SALE_ECHNL (
   BOSS_CHNL_CD    STRING,
   ECHNL_TYP_CD    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_TERM_SALE_ECHNL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_MRKT_CHNL;
CREATE EXTERNAL TABLE NG3.TR_MRKT_CHNL (
   MRKT_CHNL_CD    STRING,
   MRKT_CHNL_TYP_CD    SMALLINT,
   CHNL_LVL_CD    SMALLINT,
   CHNL_RNK1_CD    STRING,
   CHNL_RNK2_CD    STRING,
   CHNL_RNK3_CD    STRING,
   CHNL_RNK4_CD    STRING,
   CHNL_RNK1_NAM    STRING,
   CHNL_RNK2_NAM    STRING,
   CHNL_RNK3_NAM    STRING,
   CHNL_RNK4_NAM    STRING,
   CHNL_STS    SMALLINT,
   CMCC_BRANCH_CD    STRING,
   CHNL_EFF_DT    INT,
   CHNL_END_DT    INT,
   MRKT_CHNL_NAM    STRING,
   CHNL_DESC    STRING,
   PROP_TYP_CD    STRING,
   INVST_SIZE_TYP_CD    STRING,
   BUSI_OFFICE_AREA    STRING,
   TERM_CNT    INT,
   START_BUSI_DT    INT,
   PROP_BUY_TYP_CD    STRING,
   PROP_PRICE    DECIMAL(16,2),
   REPR_FEE    DECIMAL(16,2),
   TRAN_FEE    DECIMAL(16,2),
   MIAN_INVST    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_MRKT_CHNL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_PRDCT_ACCT_TAX;
CREATE EXTERNAL TABLE NG3.TR_PRDCT_ACCT_TAX (
   BASS_PRDCT_CD    STRING,
   BILL_ACCT_CD    STRING,
   PRDCT_TAX_RT    DECIMAL(10,4)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_PRDCT_ACCT_TAX ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_HR;
CREATE EXTERNAL TABLE NG3.TR_HR (
   HR_CD    SMALLINT,
   HR_NAM    STRING,
   HR_SEG_CD    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_HR ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CELL_TYP;
CREATE EXTERNAL TABLE NG3.TR_CELL_TYP (
   LOCAL_CD    STRING,
   CELL_CD    STRING,
   CMCC_BRANCH_CD    STRING,
   DISTICT_CD    STRING,
   CELL_TYP_CD    SMALLINT,
   IS_CUNTONG    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_TYJ_AREA;
CREATE EXTERNAL TABLE NG3.TR_TYJ_AREA (
   AREA_CD    STRING,
   AREA_TYPE    SMALLINT,
   AREA_NAME    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TW_CORP_OWE_DATA;
CREATE EXTERNAL TABLE NG3.TW_CORP_OWE_DATA (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   CMCC_CNTRY_CD    STRING,
   GROUP_ID    STRING,
   GUSR_ID    STRING,
   GCUST_ID    STRING,
   BILL_CYC_CD    INT,
   CORP_PRDCT_CODE    STRING,
   BASS_PRDCT_CD    STRING,
   OWE_FEE    DECIMAL(12,2),
   REC_FEE    DECIMAL(12,2),
   LATE_FEE    DECIMAL(12,2),
   FIRST_OWE_MON    INT,
   LAST_OWE_MON    INT,
   OWE_MON_CNT    INT,
   USR_STS_CD    STRING
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_SMSCHNL_SMPRESET;
CREATE EXTERNAL TABLE NG3.TR_SMSCHNL_SMPRESET (
   SMS_PREFIX    STRING,
   BRND_CD    SMALLINT,
   SP_SERVER_CD    STRING,
   CMCC_BRANCH_CD    STRING,
   PRESET_SEQ    STRING,
   BEGIN_DT    INT,
   END_DT    INT,
   MANEUV_ID    INT,
   BUSI_DESC    STRING,
   BUSI_ATTR    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_TAC_TERM_MDL_HIS;
CREATE EXTERNAL TABLE NG3.TR_TAC_TERM_MDL_HIS (
   TAC    STRING,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_MDL_ID    INT,
   TERM_DS_ID    INT,
   TERM_MDL_KEY    INT,
   IS_DFLT    STRING,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TT_TERM_MDL_ATR_VAL;
CREATE EXTERNAL TABLE NG3.TT_TERM_MDL_ATR_VAL (
   TERM_MDL_ID    INT,
   TERM_ATR_ID    INT,
   TERM_ATR_VAL_ID    INT,
   TERM_DS_ID    INT,
   TERM_MDL_KEY    INT,
   TERM_ATR_VAL_KEY    INT,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   EFF_DT    INT,
   EFF_TM    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   UPDT_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TT_TERM_MDL_ATR_VAL_HIS;
CREATE EXTERNAL TABLE NG3.TT_TERM_MDL_ATR_VAL_HIS (
   TERM_MDL_ID    INT,
   TERM_ATR_ID    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_ATR_VAL_ID    INT,
   TERM_DS_ID    INT,
   TERM_MDL_KEY    INT,
   TERM_ATR_VAL_KEY    INT,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TO_BIXF_CMNCT_USR;
CREATE EXTERNAL TABLE NG3.TO_BIXF_CMNCT_USR (
   USR_NBR    STRING,
   BRND_CD    SMALLINT,
   PKG_CD    SMALLINT,
   MO_ACT_CALLUSR_IND    STRING,
   MO_CALLUSR_IND    STRING,
   TD_DEBET_DUR    INT,
   TD_GPRS_FLUX    INT,
   CMCC_BRANCH_CD    STRING,
   UPDT_DT    INT,
   NEW_CMNCT_IND    STRING,
   ACTV_USR_IND    STRING,
   FST_ACTV_DT    INT,
   LAST_ACTV_DT    INT,
   SMS_UP_CNT    INT,
   ACTVCALL_CNT    INT,
   BYCALL_CNT    INT,
   GSM_GPRS_FLUX    BIGINT,
   T_GPRS_FLUX    INT,
   CM_ACTV_DAYS    INT,
   CM_SMS_UP_CNT    INT,
   CM_ACTVCALL_CNT    INT,
   CM_BYCALL_CNT    INT,
   CM_GSM_GPRS_FLUX    BIGINT,
   CM_TD_GPRS_FLUX    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_TERM_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_TERM_PRDCT (
   TAC    STRING,
   TERM_BRND_NAM    STRING,
   TERM_BRND_NAM_EN    STRING,
   TERM_MDL_NAM    STRING,
   TERM_TYP    SMALLINT,
   OS_TYP_CD    STRING,
   CUSTM_TERM_TYP    SMALLINT,
   INTELL_TERM_IND    STRING,
   TYJ_INTELL_TERM_IND    STRING,
   GSM_IND    STRING,
   GPRS_IND    STRING,
   WLAN_IND    STRING,
   WCDMA_IND    STRING,
   TDSCDMA_IND    STRING,
   TYJ_TDSCDMA_IND    STRING,
   TDLTE_IND    STRING,
   TYJ_TDLTE_IND    STRING,
   FDLTE_IND    STRING,
   TERM_STANDARD_TYP    STRING,
   TAC_SOURCE    STRING,
   CDMA2000_IND    STRING,
   TCTW_IND    STRING,
   PRTCL_PRC    INT,
   SCR_SIZE    STRING,
   BACK_PIXEL    BIGINT,
   SUPPORT_VOLTE_IND    STRING,
   TCH_SCR_TYP    STRING,
   PERMT_DT    INT,
   HANDWRT_IND    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_MM_APP_INF;
CREATE EXTERNAL TABLE NG3.TR_MM_APP_INF (
   APP_CD    STRING,
   APP_NAM    STRING,
   APP_KIND1_NAM    STRING,
   APP_KAND2_NAM    STRING,
   AP_CODE    STRING,
   EFF_DT    INT,
   EFF_TM    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   APP_TYP_CD    STRING,
   DEBET_TYP_CD    STRING,
   APP_TRFF    DECIMAL(10,2)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TW_DEBTBILL_CONSUME;
CREATE EXTERNAL TABLE NG3.TW_DEBTBILL_CONSUME (
   USR_NBR    STRING,
   TM_INTRVL_CD    INT,
   BRND_CD    SMALLINT,
   CMCC_BRANCH_CD    STRING,
   LB_INNER_FEE    DECIMAL(10,2),
   LB_INNER_DDD    DECIMAL(10,2),
   LB_INNER_DUR    INT,
   LB_INNER_CNT    INT,
   LB_OUTER_FEE    DECIMAL(10,2),
   LB_OUTER_DDD    DECIMAL(10,2),
   LB_OUTER_IDD    DECIMAL(10,2),
   LB_OUTER_DUR    INT,
   LB_OUTER_CNT    INT,
   PB_INNER_FEE    DECIMAL(10,2),
   PB_INNER_DDD    DECIMAL(10,2),
   PB_INNER_CNT    INT,
   PB_INNER_DUR    INT,
   PB_OUTER_FEE    DECIMAL(10,2),
   PB_OUTER_DDD    DECIMAL(10,2),
   PB_OUTER_IDD    DECIMAL(10,2),
   PB_OUTER_CNT    INT,
   PB_OUTER_DUR    INT,
   GB_FEE    DECIMAL(10,2),
   GB_DDD    DECIMAL(10,2),
   GB_IDD    DECIMAL(10,2),
   GB_CNT    INT,
   GB_DUR    INT,
   PB_MIP_FEE    DECIMAL(10,2),
   PB_MIP_DDD    DECIMAL(10,2),
   PB_MIP_IDD    DECIMAL(10,2),
   PB_MIP_DUR    INT,
   PB_MIP_CNT    INT,
   GB_MIP_FEE    DECIMAL(10,2),
   GB_MIP_DDD    DECIMAL(10,2),
   GB_MIP_IDD    DECIMAL(10,2),
   GB_MIP_DUR    INT,
   GB_MIP_CNT    INT,
   IB_FEE    DECIMAL(10,2),
   IB_DUR    INT,
   IB_CNT    INT,
   T_IP_FEE    DECIMAL(10,2),
   T_IB_DUR    INT,
   T_IB_CNT    INT,
   N_IP_FEE    DECIMAL(10,2),
   N_IP_DUR    INT,
   N_IP_CNT    INT,
   IPZT_FEE    INT,
   IPZT_DDD    DECIMAL(10,2),
   IPZT_IDD    DECIMAL(10,2),
   IPZT_CNT    INT,
   IPZT_DUR    DECIMAL(10,2),
   ZJFF_FEE    DECIMAL(10,2),
   ZJFF_DUR    INT,
   ZJFF_CNT    INT,
   BJFF_FEE    DECIMAL(10,2),
   BJFF_DUR    INT,
   BJFF_CNT    INT,
   VOCINC_MOB_FEE    DECIMAL(10,2),
   VOCINC_INF_FEE    DECIMAL(10,2),
   VOC_INC_DUR    INT,
   VOC_INC_CNT    INT,
   SMS_FEE    DECIMAL(10,2),
   SMS_CNT    INT,
   MW_SMS_FEE    DECIMAL(10,2),
   MW_SMS_INF    INT,
   MW_SMS_CNT    INT,
   LB_GPRS_FEE    DECIMAL(10,2),
   LB_GPRS_FLUX    BIGINT,
   IB_GPRS_FEE    INT,
   IB_GPRS_FLUX    BIGINT,
   WLAN_FEE    DECIMAL(10,2),
   WLAN_FLUX    BIGINT,
   ICP_INFO_FEE    DECIMAL(10,2),
   CMNET_MOB_FEE    DECIMAL(10,2),
   CMNET_INF_FEE    DECIMAL(10,2),
   OTH_DBUSI_FEE    DECIMAL(10,2),
   OTH_DBUSI_INF    DECIMAL(10,2),
   OTH_DBUSI_USE    BIGINT,
   MW_TCBACK_FEE    DECIMAL(10,2),
   MW_YCBACK_FEE    DECIMAL(10,2),
   HOME_FEE    DECIMAL(10,2),
   MON_FEE    DECIMAL(10,2),
   NEW_FUNC_FEE    DECIMAL(10,2),
   BILL_AMT_FEE    DECIMAL(10,2),
   BILL_AMT_DUR    INT,
   BILL_AMT_CNT    INT,
   VOC_BUSI_FEE    DECIMAL(10,2),
   DATA_BUSI_FEE    DECIMAL(10,2),
   GPRS_TAOCAN_FEE    DECIMAL(10,2),
   IUSR_XSCTBY_MON_FEE    DECIMAL(10,2),
   IUSR_ZDXF_FEE    DECIMAL(10,2),
   DZK_IP_MON_FEE    DECIMAL(10,2),
   NBR_KEEP_FEE    DECIMAL(10,2),
   IUSR_AXYD1Y_FEE    DECIMAL(10,2),
   CORP_BUSI_FEE    DECIMAL(10,2),
   OTH_FEE    DECIMAL(10,2),
   MULTNBR_RENT    DECIMAL(12,2),
   PKG_CD    SMALLINT
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_CXCRM_BASS_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_CXCRM_BASS_PRDCT (
   BASS_PRDCT_CD    STRING,
   CMCC_BRANCH_CD    STRING,
   TM_INTRVL_CD    INT,
   BASS_PRDCT_NAME    STRING,
   BASS_PRDCT_CATALOG_CD    STRING,
   BASS_PRDCT_TYP    SMALLINT,
   OVER_REGION_TYP    SMALLINT,
   EFF_DT    INT,
   EFF_TIM    STRING,
   INVALID_DT    INT,
   INVALID_TIM    STRING,
   STS_CD    STRING,
   BASS_PRDCT_DES    STRING,
   REGION_CD    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_WLAN_APHOT_INF;
CREATE EXTERNAL TABLE NG3.TR_WLAN_APHOT_INF (
   SEQ_ID    INT,
   CMCC_BRANCH_CD    STRING,
   HOT_POINT_NAM    STRING,
   AP_COVER_RNK    STRING,
   NAS_PORT_ID    STRING,
   NAS_ID    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_WLAN_APHOT_INF ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_NB_SP_TYP;
CREATE EXTERNAL TABLE NG3.TR_NB_SP_TYP (
   SP_CODE    STRING,
   SP_SUBBUSI_CD    STRING,
   BUSI_TYP    SMALLINT,
   BUSI_NAME    STRING,
   TYP_DESC    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_NB_SP_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_STA_PROPORTION;
CREATE EXTERNAL TABLE NG3.TR_STA_PROPORTION (
   CMCC_BRANCH_CD    STRING,
   PROPORTION_IND    STRING,
   CMCC_CTY_NAM    STRING,
   CMCC_CNTY_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_STA_PROPORTION ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_EBOX_UNIT_TYP;
CREATE EXTERNAL TABLE NG3.TR_EBOX_UNIT_TYP (
   EBOX_UNIT_TYP_CD    SMALLINT,
   EBOX_UNIT_TYP_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_EBOX_UNIT_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_EBOX_UNIT;
CREATE EXTERNAL TABLE NG3.TR_EBOX_UNIT (
   EBOX_UNIT_CD    STRING,
   EBOX_UNIT_NAM    STRING,
   S_EBOX_UNIT_TYP_CD    SMALLINT,
   EBOX_UNIT_TYP_CD    SMALLINT,
   EBOX_STS_CD    SMALLINT,
   ISWITHD_CD    SMALLINT,
   EFF_DT    INT,
   INVLD_DT    INT,
   PAY_TRADE_ID    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_EBOX_UNIT ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_NGCC_10086_ORA_CLASS_MAP;
CREATE EXTERNAL TABLE NG3.TR_NGCC_10086_ORA_CLASS_MAP (
   ORG_ID    STRING,
   ORG_NAM    STRING,
   ORA_CLASS    SMALLINT,
   ORA_CLASS_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_NGCC_10086_ORA_CLASS_MAP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_CORP_GPFLUX_HST;
CREATE EXTERNAL TABLE NG3.TT_CORP_GPFLUX_HST (
   CMCC_BRANCH_CD    STRING,
   HST_CD    STRING,
   HST_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_CORP_GPFLUX_HST ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_F_TRML_INF;
CREATE EXTERNAL TABLE NG3.TR_F_TRML_INF (
   TERM_CD    STRING,
   TERM_BRND    STRING,
   TERM_MOD    STRING,
   COLOR    STRING,
   GOODS_CD    STRING,
   TRML_PROTO_PRC    DECIMAL(12,2),
   TRML_SELL_PRC    DECIMAL(12,2),
   UPDATE_DT    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_F_TRML_INF ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_F_PRDCT_ELMT_INF;
CREATE EXTERNAL TABLE NG3.TR_F_PRDCT_ELMT_INF (
   PRDCT_ELMT_CD    STRING,
   PRDCT_ELMT_NAM    STRING,
   BUSI_TYP_CD    STRING,
   BUSI_UNIT    STRING,
   BUSI_SUPP_PRC    DECIMAL(16,12),
   DEPR_DIV_PRC    DECIMAL(16,12),
   NET_MNG_PRC    DECIMAL(16,12)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_F_PRDCT_ELMT_INF ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_F_COA_UNIT_INF;
CREATE EXTERNAL TABLE NG3.TR_F_COA_UNIT_INF (
   RES_TYP_CD    STRING,
   UNIT_CD    STRING,
   UNIT_NAM    STRING,
   RES_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_F_COA_UNIT_INF ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_ATR_REL;
CREATE EXTERNAL TABLE NG3.TT_TERM_ATR_REL (
   TERM_ATR_ID    INT,
   TERM_DS_ID    INT,
   TERM_ATR_COLNM    STRING,
   TERM_ATR_NAM    STRING,
   TERM_ATR_DESC    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_ATR_REL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_MDL_MAP;
CREATE EXTERNAL TABLE NG3.TT_TERM_MDL_MAP (
   TERM_MDL_KEY    INT,
   TERM_BRND_KEY    INT,
   TERM_BRND_NAM    STRING,
   TERM_MDL_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_MDL_MAP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_MDL_REL_HIS;
CREATE EXTERNAL TABLE NG3.TT_TERM_MDL_REL_HIS (
   TERM_MDL_KEY    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_MDL_ID    INT,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_MDL_REL_HIS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_ATR_VAL_MAP;
CREATE EXTERNAL TABLE NG3.TT_TERM_ATR_VAL_MAP (
   TERM_ATR_VAL_KEY    INT,
   TERM_ATR_ID    INT,
   TERM_ATR_VAL    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_ATR_VAL_MAP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_ATR_VAL_REL_HIS;
CREATE EXTERNAL TABLE NG3.TT_TERM_ATR_VAL_REL_HIS (
   TERM_ATR_VAL_KEY    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_ATR_ID    INT,
   TERM_ATR_VAL_ID    INT,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_ATR_VAL_REL_HIS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_BRND_MAP;
CREATE EXTERNAL TABLE NG3.TT_TERM_BRND_MAP (
   TERM_BRND_KEY    INT,
   TERM_BRND_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_BRND_MAP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_BRND_REL_HIS;
CREATE EXTERNAL TABLE NG3.TT_TERM_BRND_REL_HIS (
   TERM_BRND_KEY    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_BRND_ID    INT,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_BRND_REL_HIS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_MDL_HIS;
CREATE EXTERNAL TABLE NG3.TR_TERM_MDL_HIS (
   TERM_MDL_ID    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_BRND_ID    INT,
   TERM_BRND_NAM    STRING,
   TERM_MDL_NAM    STRING,
   TERM_MDL_NCKNM    STRING,
   IS_DFLT    STRING,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_TERM_MDL_HIS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_ATR_VAL_HIS;
CREATE EXTERNAL TABLE NG3.TR_TERM_ATR_VAL_HIS (
   TERM_ATR_VAL_ID    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_ATR_ID    INT,
   TERM_ATR_VAL    STRING,
   IS_DFLT    STRING,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_TERM_ATR_VAL_HIS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_BRND_HIS;
CREATE EXTERNAL TABLE NG3.TR_TERM_BRND_HIS (
   TERM_BRND_ID    INT,
   EFF_DT    INT,
   EFF_TM    STRING,
   UPDT_FLG    STRING,
   TERM_BRND_NAM    STRING,
   TERM_BRND_NAM_CN    STRING,
   TERM_BRND_NAM_EN    STRING,
   COUNTRY    STRING,
   URL    STRING,
   IS_DFLT    STRING,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_TERM_BRND_HIS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_YK_WARN_LVL_DEPLOY;
CREATE EXTERNAL TABLE NG3.TR_YK_WARN_LVL_DEPLOY (
   YK_WARN_LVL_CD    STRING,
   YK_WARK_LVL_LOW    DECIMAL(14,2),
   YK_WARN_LVL_HIGH    DECIMAL(14,2)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_TAC_TERM;
CREATE EXTERNAL TABLE NG3.TR_TAC_TERM (
   TAC    STRING,
   TERM_MDL_ID    INT,
   TERM_DS_ID    INT,
   TERM_MDL_KEY    INT,
   IS_DFLT    STRING,
   IS_CHK    STRING,
   REC_FLG    STRING,
   USER_ID    STRING,
   EFF_DT    INT,
   EFF_TM    STRING,
   INV_DT    INT,
   INV_TM    STRING,
   CURR_FLG    STRING,
   UPDT_FLG    STRING,
   REMARK    STRING,
   JT_IND    STRING,
   JT_TD_IND    STRING,
   JT_SMT_IND    STRING,
   TYJ_TDLTE_IND    STRING,
   CUSTM_TERM_TYP    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TS_CUSTM_IMEI_INF;
CREATE EXTERNAL TABLE NG3.TS_CUSTM_IMEI_INF (
   TM_INTRVL_CD    INT,
   TAC    STRING,
   TERM_BRND_NAME    STRING,
   TERM_MODEL_NAME    STRING,
   TERM_PRDCT_TYP    STRING,
   TERM_PRDCT_SYS    STRING,
   TERM_SELL_CNT    INT,
   PRTCL_PRC    INT
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TT_TERM_ATR_CNCT_REL;
CREATE EXTERNAL TABLE NG3.TT_TERM_ATR_CNCT_REL (
   PAR_TERM_ATR_ID    INT,
   CHLD_TERM_ATR_ID    INT,
   REL_ID    INT,
   REL_LVL    INT,
   REL_DESC    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_ATR_CNCT_REL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_TERM_ATR_VAL_CNCT_REL;
CREATE EXTERNAL TABLE NG3.TT_TERM_ATR_VAL_CNCT_REL (
   PAR_TERM_ATR_VAL_ID    INT,
   CHLD_TERM_ATR_VAL_ID    INT,
   REL_ID    INT,
   PAR_TERM_ATR_ID    INT,
   CHLD_TERM_ATR_ID    INT,
   IS_DFLT    STRING,
   REL_LVL    INT,
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_TERM_ATR_VAL_CNCT_REL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_ATR;
CREATE EXTERNAL TABLE NG3.TR_TERM_ATR (
   TERM_ATR_ID    INT,
   TERM_ATR_SEQ    INT,
   TERM_ATR_COLNM    STRING,
   TERM_ATR_NAM    STRING,
   TERM_ATR_TYP    STRING,
   TERM_ATR_SUBTYP    STRING,
   TERM_ATR_DATATYP    STRING,
   TERM_ATR_DFLT    STRING,
   BASIC_ATR_IND    STRING,
   TERM_ATR_DESC    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_TERM_ATR ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_DATA_SRC;
CREATE EXTERNAL TABLE NG3.TR_TERM_DATA_SRC (
   TERM_DS_ID    INT,
   TERM_DS_NAM    STRING,
   TERM_DS_SEQ    INT,
   TERM_DS_DESC    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_TERM_DATA_SRC ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_TERM_INF;
CREATE EXTERNAL TABLE NG3.TR_TERM_INF (
   TERM_MDL_ID    INT,
   TERM_TYP    STRING,
   PROD_CORP    STRING,
   TERM_BRND_NAM    STRING,
   TERM_BRND_NAM_EN    STRING,
   TERM_MDL_NAM    STRING,
   TERM_MDL_NCKNM    STRING,
   TERM_SIZE    STRING,
   TERM_LEN    DECIMAL(8,2),
   TERM_WDTH    DECIMAL(8,2),
   TERM_HGT    DECIMAL(8,2),
   TERM_WGT    DECIMAL(8,2),
   TERM_STYLE    STRING,
   TERM_COLR    STRING,
   MKT_PSTN    STRING,
   PRTCL_PRC    INT,
   TERM_ABL    STRING,
   CERT_IND    STRING,
   PERMT_DT    INT,
   STOP_PROD_DT    INT,
   OS_UA_STR    STRING,
   CPU_CNT    INT,
   CPU_BRND    STRING,
   CPU_MDL    STRING,
   CPU_ARM_VER    STRING,
   CPU_FREQ    STRING,
   GPU_BRND    STRING,
   GPU_MDL    STRING,
   MEM_SIZE    STRING,
   RAM_SIZE    STRING,
   ROM_SIZE    STRING,
   ROM_IDLE_SIZE    STRING,
   STOR_TYP    STRING,
   STOR_MAX_SIZE    STRING,
   PHNBK_SIZE    STRING,
   PHNBK_CARD_IND    STRING,
   PHNBK_GRP_IND    STRING,
   STACK_SIZE    STRING,
   JARPKG_SIZE    STRING,
   MAXOBJ_SIZE    STRING,
   XPND_CARD_IND    STRING,
   OS_TYP    STRING,
   OS_VER    STRING,
   OS_SUBVER    STRING,
   SFTWE_VER    STRING,
   OTH_SFTWE_VER    STRING,
   VIEW_MTHD    STRING,
   HDWE_VER    STRING,
   DVLP_PLTFM    STRING,
   PLTFM_BRND    STRING,
   PLTFM_VER    STRING,
   DGT_BSBND    STRING,
   PHYS_PRTCL_SFTWE    STRING,
   ANLG_BSBND    STRING,
   SMTPHN_IND    STRING,
   CHAR_SET    STRING,
   CHAR_ENCD    STRING,
   CHAR_LANG    STRING,
   LRG_CHAR_SIZE    STRING,
   MID_CHAR_SIZE    STRING,
   SML_CHAR_SIZE    STRING,
   FLLT_VER    STRING,
   FLLT_PLUGIN_IND    STRING,
   FLLT_SCR_IND    STRING,
   FLLT_WPAPR_IND    STRING,
   FLLT_RINGTN_IND    STRING,
   FL_CALL_IND    STRING,
   FL_SMS_IND    STRING,
   FL_AUDIO_FMT    STRING,
   FL_VIDEO_FMT    STRING,
   MAIL_PRTCL    STRING,
   DOC_TYP    STRING,
   BLDIN_APP    STRING,
   EKA_CERT_IND    STRING,
   WAP_COMPRS_IND    STRING,
   UMA_IND    STRING,
   ADHN_STS_IND    STRING,
   ACTV_STS_IND    STRING,
   DATA_TRNSMS_IND    STRING,
   HANDWRT_IND    STRING,
   TCH_SCR_TYP    STRING,
   MUTI_TCH_IND    STRING,
   SCR_CNT    STRING,
   SCR_SIZE    STRING,
   DSPL_SIZE    STRING,
   SCR_RSVL_WDTH    STRING,
   SCR_RSVL_LEN    STRING,
   SCR_MTRL    STRING,
   COLR_DPTH    STRING,
   CHAR_SIZE    STRING,
   CHAR_SIZE_WDTH    STRING,
   CHAR_SIZE_LEN    STRING,
   ROW_CHAR_CNT    INT,
   IP_CHAR_SET    STRING,
   OP_CHAR_SET    STRING,
   CHRG_INTF    STRING,
   HEADPHN_INTF    STRING,
   CHRG_IP    STRING,
   BTR_CPCY    STRING,
   STNDBY_TM_DESC    STRING,
   TALK_TM_DESC    STRING,
   KEYBD_TYP    STRING,
   SOFTKEY_CNT    INT,
   SIM_CNT    INT,
   TCTW_IND    STRING,
   DBL_CRD_MDE    STRING,
   OTA_IND    STRING,
   SIM_VLT    STRING,
   CAM_CNT    INT,
   CAM_PIXEL    STRING,
   MACRO_LENS_IND    STRING,
   FILLLIGHT_CNT    INT,
   FLASHLIGHT_CNT    INT,
   IMAG_RSVL    STRING,
   CAM_IND    STRING,
   PHOT_IMG_FMT    STRING,
   VIDEO_RSVL    STRING,
   VIDEO_FPS    INT,
   SMS_FUNC_IND    STRING,
   SMS_GRP_SND_IND    STRING,
   LNG_SMS_IND    STRING,
   FSMS_IND    STRING,
   SMS_RECPT_IND    STRING,
   SMS_SGN    STRING,
   MMS_IND    STRING,
   MMS_VER    STRING,
   MMS_SIZE    STRING,
   MMS_IMG_RSVL    STRING,
   MMS_DFLT_CHAR_SET    STRING,
   MMS_CHAR_SET    STRING,
   MMS_SMIL_IND    STRING,
   MMS_MEDIA_IND    STRING,
   MMS_FRAM_CNT    INT,
   MMS_HPLNK_IND    STRING,
   MMS_PER_WORDS    STRING,
   ELCTR_DICT_IND    STRING,
   REC_FUNC_IND    STRING,
   CLOS_ALRM_IND    STRING,
   WAP_VER    STRING,
   WAP_CHAR_SET    STRING,
   WML_SCRIPT_VER    STRING,
   WML_VER    STRING,
   WTA_VER    STRING,
   OMA_DRM_VER    STRING,
   DRM_FUNC_SET    STRING,
   DRM_TRNS_MTHD    STRING,
   OMA_DWLD_IND    STRING,
   OMA_CLI_VER    STRING,
   OMA_DEVC    STRING,
   OMA_DATA    STRING,
   WAP_PUSH_IND    STRING,
   PUSH_MSG    STRING,
   NET_MDE_TYP    STRING,
   GSM_IND    STRING,
   WCDMA_IND    STRING,
   TDSCDMA_IND    STRING,
   NET_MDE    STRING,
   NET_STD_GEN    STRING,
   NET_FREQ    STRING,
   CARRY_FREQ_SEG    STRING,
   GPRS_IND    STRING,
   EDGE_FUNC_IND    STRING,
   USSD_IND    STRING,
   BLUETOOTH_IND    STRING,
   BT_VER    STRING,
   BLUETOOTH_PRTCL    STRING,
   WIFI_IND    STRING,
   WLAN_PRTCL    STRING,
   INFRA_RED_IND    STRING,
   USB_VER    STRING,
   MODEM_IND    STRING,
   HDMI_TYP    STRING,
   HDMI_VER    STRING,
   APN_IND    STRING,
   APN_AUTO_IND    STRING,
   LCL_LNL_MDE    STRING,
   GPS_IND    STRING,
   PS_CS_IND    STRING,
   PS_CS_SPD    STRING,
   SYNCML_IND    STRING,
   IMPS_IND    STRING,
   WEB_NAM    STRING,
   WEB_VER    STRING,
   HTML_VER    STRING,
   XHTML_VER    STRING,
   WEB_TAB_IND    STRING,
   WEB_FRAME_IND    STRING,
   WEB_JA_IND    STRING,
   WEB_JA_VER    STRING,
   WEB_JS_IND    STRING,
   WEB_JS_VER    STRING,
   JAVA_IND    STRING,
   MIDP_VER    STRING,
   CLDC_VER    STRING,
   JAVA_PKG    STRING,
   JAVA_PRTCL    STRING,
   IMG_FMT    STRING,
   MAX_JPEG_SIZE    STRING,
   MAX_PNG_SIZE    STRING,
   STDBY_IMG_FMT    STRING,
   STDBY_IMG_SIZE    STRING,
   STDBY_IMG_SIZE_WDTH    STRING,
   STDBY_IMG_SIZE_LEN    STRING,
   SCRSV_IMG_FMT    STRING,
   SCRSV_IMG_SIZE    STRING,
   SCRSV_IMG_SIZE_WDTH    STRING,
   SCRSV_IMG_SIZE_LEN    STRING,
   AUDIO_FMT    STRING,
   CHORD_CNT    INT,
   BELL_BYTE_SIZE    STRING,
   SPKEAR_IND    STRING,
   MP3_IND    STRING,
   POC_IND    STRING,
   MEDIA_PLAY_TYP    STRING,
   MEDIA_FMT    STRING,
   MEDIA_DWLD_IND    STRING,
   MEDIA_AUDIO_FMT    STRING,
   MEDIA_VIDEO_FMT    STRING,
   VIDEO_FMT    STRING,
   DNMC_MEM_IND    STRING,
   VIDEO_STACK_SIZE    STRING,
   DGTL_CPRT_TYP    STRING,
   HTTP_DWLD    STRING,
   OMA_DWLD    STRING,
   ACC_BELL    STRING,
   VIDEO_ENCD    STRING,
   AUDIO_ENCD    STRING,
   GRVTY_IND    STRING,
   ELCTR_CMPS_IND    STRING,
   DISTN_SNS_IND    STRING,
   RDL_SNS_IND    STRING,
   ACCL_SNS_IND    STRING,
   GRSCP_SNS_IND    STRING,
   ACCL_3D_IND    STRING,
   RADIO_FUNC    STRING,
   RFSIM_IND    STRING,
   NFC_IND    STRING,
   MP_SMS_IND    STRING,
   USAT_MENU    STRING,
   FETION_IND    STRING,
   MOBILE_STOCK_IND    STRING,
   MUSIC_WALKMAN_IND    STRING,
   PHNBK_MNG_IND    STRING,
   GPLUS_GAME_IND    STRING,
   MOBILE_NVGT_IND    STRING,
   MAIL_139_IND    STRING,
   MOBILE_READ_IND    STRING,
   MOBILE_VIDEO_IND    STRING,
   MM_CLI_IND    STRING,
   CMMB_IND    STRING,
   ANMT_CTN_IND    STRING,
   WRLS_CITY_IND    STRING,
   GAME_IND    STRING,
   THRD_UC_IND    STRING,
   THRD_QQ_IND    STRING,
   TDLTE_IND    STRING,
   FDLTE_IND    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_NB_WLAN_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_NB_WLAN_PRDCT (
   BASS_PRDCT_CD    STRING,
   BASS_PRDCT_NAM    STRING,
   WLAN_PKG_TYP_CD    SMALLINT,
   WLAN_PKG_TYP_DTL_CD    INT,
   WLAN_PKG_DEBET_TYP_CD    SMALLINT,
   WLAN_PKG_TYP_NAM    STRING,
   WLAN_PKG_FLUX    BIGINT,
   WLAN_PKG_DUR    INT,
   WLAN_PKG_FEE    DECIMAL(12,2)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_NB_WLAN_PRDCT ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_NB_MOBNEWS;
CREATE EXTERNAL TABLE NG3.TR_NB_MOBNEWS (
   SP_CODE    STRING,
   SP_SUBBUSI_CD    STRING,
   NEWS_CLASS_CD    STRING,
   NEWS_CD    INT,
   SP_BUSICLASS_CD    STRING,
   NEWS_NAM    STRING,
   SORT_VAL    INT,
   MONTH_FEE    STRING,
   SP_SUBBUSI_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_NB_MOBNEWS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_FETION_REQSRS;
CREATE EXTERNAL TABLE NG3.TR_FETION_REQSRS (
   REQSRS_CD    STRING,
   REQSRS_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_FETION_REQSRS ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_NB_SMS_PKG_TYP;
CREATE EXTERNAL TABLE NG3.TR_NB_SMS_PKG_TYP (
   SMS_PKG_TYP_CD    SMALLINT,
   SMS_PKG_TYP_NAM    STRING,
   PKG_FEE    DECIMAL(10,2)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_NB_SMS_PKG_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_SMS_GPRS_MARK_PLAN;
CREATE EXTERNAL TABLE NG3.TR_SMS_GPRS_MARK_PLAN (
   MARK_PLAN_CD    STRING,
   PKG_FEE    DECIMAL(10,2),
   PKG_TYP    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_SMS_GPRS_MARK_PLAN ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CORP_OWE_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_CORP_OWE_PRDCT (
   BASS_PRDCT_CD    STRING,
   BASS_PRDCT_NAM    STRING,
   ODER    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_CORP_OWE_PRDCT ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CORPCARD_SERVICE;
CREATE EXTERNAL TABLE NG3.TR_CORPCARD_SERVICE (
   CORPCARD_TYP_CD    SMALLINT,
   GROUP_ID    STRING,
   SRVC_NAM    STRING,
   SRVC_FEE    DECIMAL(10,2),
   ADR_CNT    INT,
   APS_EDT    STRING,
   DESC    STRING,
   VALID_IND    STRING,
   CREAT_DT    INT,
   CREAT_TIM    STRING,
   CHG_DT    INT,
   CHG_TIM    STRING,
   WEB_FUNC_IND    STRING,
   WAP_FUNC_IND    STRING,
   MAX_LEN    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_PRDCT_BI_TAX;
CREATE EXTERNAL TABLE NG3.TR_PRDCT_BI_TAX (
   CORP_PRDCT_CODE    STRING,
   PRDCT_TAX_RT    DECIMAL(10,4)
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_PRDCT_BI_TAX ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_APN_NBR;
CREATE EXTERNAL TABLE NG3.TR_APN_NBR (
   CMCC_BRANCH_CD    STRING,
   CMCC_CTY_NAM    STRING,
   APN_NBR    STRING,
   GROUP_NAM    STRING,
   GROUP_ID    STRING,
   INDUSTRY_TYP_CD    SMALLINT,
   INDUSTRY_TYP_NAM1    STRING,
   INDUSTRY_TYP_NAM2    STRING,
   GPRS_CNCT_TYP_NAM    STRING,
   CORP_PRDCT_NBR    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_APN_NBR ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_GSM_TD_CELL;
CREATE EXTERNAL TABLE NG3.TR_GSM_TD_CELL (
   NTD_CELL_ID    INT,
   TD_CELL_ID    INT,
   CTY_CD    STRING,
   NTD_CELL_LAC    STRING,
   NTD_CELL_CI    STRING,
   TD_CELL_LAC    STRING,
   TD_CELL_CI    STRING,
   AREA_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_GSM_TD_CELL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_CXCRM_BUSI;
CREATE EXTERNAL TABLE NG3.TR_CXCRM_BUSI (
   BASS_PRDCT_CD    STRING,
   CMCC_BRANCH_CD    STRING,
   BUSI_TYP    STRING,
   BUSI_NAM    STRING,
   BUSI_FEE    DECIMAL(14,2),
   REMARK    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_CXCRM_BUSI ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TO_STUDENT_CMNCT_INF;
CREATE EXTERNAL TABLE NG3.TO_STUDENT_CMNCT_INF (
   SCHOOL_CD    STRING,
   USR_NBR    STRING,
   GROUP_ID    STRING,
   SCHOOL_NAM    STRING,
   SUB_SCHOOL_NAM    STRING,
   ACADEMY    STRING,
   CLASS    STRING,
   STUDENT_NAM    STRING,
   DUTY    STRING,
   STUDENT_ORG_FLAG    STRING,
   BRND_CD    SMALLINT,
   BRND_NAM    STRING,
   MAIL_ADDR    STRING,
   FETION_FLAG    STRING,
   COMM_139_FLAG    STRING,
   CAMPUS_VPMN_FLAG    STRING,
   MAIL_MOBILE_FLAG    STRING,
   REMARK    STRING,
   LAST_UPDATE_DT    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_SCHOOL_INF;
CREATE EXTERNAL TABLE NG3.TR_SCHOOL_INF (
   SCHOOL_CD    STRING,
   SCHOOL_NAM    STRING,
   CMCC_BRANCH_CD    INT,
   SCHOOL_TYP_CD    STRING,
   SCHOOL_TOTAL_CNT    INT,
   SCHOOL_NEW_CNT    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TW_SHL_STUD_MO;
CREATE EXTERNAL TABLE NG3.TW_SHL_STUD_MO (
   TM_INTRVL_CD    INT,
   USR_NBR    STRING,
   CMCC_BRANCH_CD    STRING,
   BRND_CD    SMALLINT,
   SCHOOL_CD    STRING,
   LOCAL_CD    STRING,
   CELL_CD    STRING,
   CALL_CNT    INT,
   CALL_DUR    INT,
   SCHOOL_AREA_CALL_CNT    INT,
   SCHOOL_AREA_CALL_DUR    INT,
   SCHOOL_CALL_CNT    INT,
   SCHOOL_CALL_DUR    INT,
   CELL_CALL_CNT    INT,
   CELL_CALL_DUR    INT,
   STUDENT_IND    STRING,
   SCHOOL_AREA_ACTV_DAYS    INT,
   CURRMO_AMT_FEE    DECIMAL(10,2),
   CALLUSR_IND    STRING,
   INNET_MO_CNT    SMALLINT,
   START_DT    INT,
   MARK_PLAN_IND    SMALLINT,
   FETION_ACT_DAYS    SMALLINT,
   SCHOOL_GROUP_IND    SMALLINT,
   GROUP_ID    STRING,
   SCHOOL_AREA_CALL_CNT_RT    DECIMAL(10,2),
   SCHOOL_AREA_CALL_DUR_RT    DECIMAL(10,2),
   TYP_CD    SMALLINT,
   STUDENT_RT    DECIMAL(10,4)
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TW_SHL_AREA_CUST_MO;
CREATE EXTERNAL TABLE NG3.TW_SHL_AREA_CUST_MO (
   TM_INTRVL_CD    INT,
   USR_NBR    STRING,
   CMCC_BRANCH_CD    STRING,
   BRND_CD    SMALLINT,
   SCHOOL_CD    STRING,
   LOCAL_CD    STRING,
   CELL_CD    STRING,
   CALL_CNT    INT,
   CALL_DUR    INT,
   SCHOOL_AREA_CALL_CNT    INT,
   SCHOOL_AREA_CALL_DUR    INT,
   SCHOOL_CALL_CNT    INT,
   SCHOOL_CALL_DUR    INT,
   CELL_CALL_CNT    INT,
   CELL_CALL_DUR    INT
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_ID_AREA;
CREATE EXTERNAL TABLE NG3.TR_ID_AREA (
   ID_HOME_CNTY_CD    STRING,
   ID_HOME_CNTY    STRING,
   ID_HOME_PROV_CD    STRING,
   ID_HOME_PROV    STRING,
   ID_HOME_CITY_CD    STRING,
   ID_HOME_CITY    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_ID_AREA ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_HOMEBRB_PKG_SPEED;
CREATE EXTERNAL TABLE NG3.TR_HOMEBRB_PKG_SPEED (
   PKG_SPEED_CD    SMALLINT,
   PKG_SPEED_DEC    STRING,
   PKG_SPEED_TYP_1    INT,
   PKG_SPEED_TYP_DES_1    STRING,
   PKG_SPEED_TYP_2    INT,
   PKG_SPEED_TYP_DES_2    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_HOMEBRB_PKG_SPEED ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_MOBNEWS_SP;
CREATE EXTERNAL TABLE NG3.TR_MOBNEWS_SP (
   SP_CODE    STRING,
   SP_SUBBUSI_CD    STRING,
   SP_BUSICLASS_CD    STRING,
   NEWS_CD    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_MOBNEWS_SP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_MRKT_REPT;
CREATE EXTERNAL TABLE NG3.TR_MRKT_REPT (
   ITEM_CD    STRING,
   ITEM_NAME    STRING,
   INTRS_TYP_CD    STRING,
   INTRS_TYP_NAME    STRING,
   SUM_ITEM_CD    SMALLINT,
   SUM_ITEM_NAME    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_MRKT_REPT ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_ZNTS_CUST_LVL;
CREATE EXTERNAL TABLE NG3.TR_ZNTS_CUST_LVL (
   CUST_LVL_CD    STRING,
   CUST_LVL_NAM    STRING,
   KFBRND_CD    STRING,
   KFBRND_NAM    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_ZNTS_CUST_LVL ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_FUNC_BUSI;
CREATE EXTERNAL TABLE NG3.TT_FUNC_BUSI (
   CMCC_BRANCH_CD    STRING,
   FUNC_CD    STRING,
   BUSI_CLASS_CD    STRING,
   BUSI_CLASS_NAM    STRING,
   REMARKS    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_FUNC_BUSI ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_BRND_BUSI_TYP;
CREATE EXTERNAL TABLE NG3.TT_BRND_BUSI_TYP (
   CMCC_BRANCH_CD    STRING,
   BUSI_TYP_CD    STRING,
   BRND_CD    SMALLINT,
   BUSI_CLASS_CD    STRING,
   BUSI_CLASS_NAM    STRING,
   REMARKS    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_BRND_BUSI_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_CHNL_BUSI_TYP;
CREATE EXTERNAL TABLE NG3.TT_CHNL_BUSI_TYP (
   CMCC_BRANCH_CD    STRING,
   BUSI_TYP_CD    STRING,
   BUSI_CLASS_CD    STRING,
   BUSI_CLASS_NAM    STRING,
   REMARKS    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_CHNL_BUSI_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_GOODS_BUSI;
CREATE EXTERNAL TABLE NG3.TT_GOODS_BUSI (
   CMCC_BRANCH_CD    STRING,
   GOODS_CD    STRING,
   BUSI_TYP_CD    STRING,
   BUSI_CLASS_CD    STRING,
   BUSI_CLASS_NAM    STRING,
   REMARKS    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_GOODS_BUSI ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TT_CXCRM_PRDCT_BUSI;
CREATE EXTERNAL TABLE NG3.TT_CXCRM_PRDCT_BUSI (
   CMCC_BRANCH_CD    STRING,
   BASS_PRDCT_CD    STRING,
   BUSI_TYP_CD    STRING,
   BUSI_CLASS_CD    STRING,
   BUSI_CLASS_NAM    STRING,
   REMARKS    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_CXCRM_PRDCT_BUSI ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TM_SOLD_INACTV_BAL_MO;
CREATE EXTERNAL TABLE NG3.TM_SOLD_INACTV_BAL_MO (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   BRND_CD    SMALLINT,
   START_AMT    DECIMAL(16,2),
   ADD_AMT    DECIMAL(16,2),
   CHRG_AMT    DECIMAL(16,2),
   INVALID_AMT    DECIMAL(16,2),
   RETURN_AMT    DECIMAL(16,2),
   END_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_SOLD_INACTV_BAL;
CREATE EXTERNAL TABLE NG3.TM_SOLD_INACTV_BAL (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   BRND_CD    SMALLINT,
   START_AMT    DECIMAL(16,2),
   ADD_AMT    DECIMAL(16,2),
   CHRG_AMT    DECIMAL(16,2),
   INVALID_AMT    DECIMAL(16,2),
   RETURN_AMT    DECIMAL(16,2),
   END_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_BOSS_PKGCRD_RPT_DAY;
CREATE EXTERNAL TABLE NG3.TM_BOSS_PKGCRD_RPT_DAY (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   BRND_CD    INT,
   CRD_CNT    INT,
   CRD_AMT    DECIMAL(16,2),
   SALE_AMT    DECIMAL(16,2),
   PKG_PRECHRG_AMT    DECIMAL(16,2),
   PKG_DIS_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_QY_DEBT_BAL_RPT_MO;
CREATE EXTERNAL TABLE NG3.TM_QY_DEBT_BAL_RPT_MO (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   BRND_CD    SMALLINT,
   START_AMT    DECIMAL(16,2),
   SHOULD_AMT    DECIMAL(16,2),
   ADJUST_AMT    DECIMAL(16,2),
   INCOME_AMT    DECIMAL(16,2),
   BRND_CHG_AMT    DECIMAL(16,2),
   NOUSR_TOWE_AMT    DECIMAL(16,2),
   END_AMT    DECIMAL(16,2),
   DIFF_AMT    DECIMAL(16,2),
   DEP_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_GLB_GIFT_DAY;
CREATE EXTERNAL TABLE NG3.TM_GLB_GIFT_DAY (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   MRKT_CHNL_CD    STRING,
   GLB_RESERVE_FEE    DECIMAL(16,2),
   GLB_GIFT_FEE    DECIMAL(16,2),
   SZXCRD_GIFT_FEE    DECIMAL(16,2),
   JFKCRD_GIFT_FEE    DECIMAL(16,2),
   IPCRD_GIFT_FEE    DECIMAL(16,2),
   CZKCRD_GIFT_FEE    DECIMAL(16,2),
   OTHCRD_GIFT_FEE    DECIMAL(16,2),
   SZXCRD_SLL_VAL    DECIMAL(16,2),
   SZXCRD_DISCOUNT_FEE    DECIMAL(16,2),
   JFKCRD_SLL_VAL    DECIMAL(16,2),
   JFKCRD_DISCOUNT_FEE    DECIMAL(16,2),
   IPCRD_SLL_VAL    DECIMAL(16,2),
   IPCRD_DISCOUNT_FEE    DECIMAL(16,2),
   CZKCRD_SLL_VAL    DECIMAL(16,2),
   CZKCRD_DISCOUNT_FEE    DECIMAL(16,2),
   OTHCRD_SLL_VAL    DECIMAL(16,2),
   OTHCRD_DISCOUNT_FEE    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_BUSI_RPT_DAY;
CREATE EXTERNAL TABLE NG3.TM_BUSI_RPT_DAY (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   TAKING_TYP    STRING,
   OR_TAKING_TYP    STRING,
   FEE    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_BUSI_FUND_DAY;
CREATE EXTERNAL TABLE NG3.TM_BUSI_FUND_DAY (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   PAY_TYP    SMALLINT,
   OR_PAY_TYP    STRING,
   FEE    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_GOTONE_CHRG_RPT_DAY;
CREATE EXTERNAL TABLE NG3.TM_GOTONE_CHRG_RPT_DAY (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   TRADE_TYP_CD    SMALLINT,
   USR_CNT    INT,
   CRD_CNT    INT,
   CHRG_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_BOSS_CHRGCRD_RPT_DAY;
CREATE EXTERNAL TABLE NG3.TM_BOSS_CHRGCRD_RPT_DAY (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   GOODS_CD    STRING,
   CRD_AMT    INT,
   CRD_CNT    INT,
   SALE_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_QY_INCOME_RPT;
CREATE EXTERNAL TABLE NG3.TM_QY_INCOME_RPT (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   CHRG_CRD_AMT    DECIMAL(16,2),
   PKG_CRD_AMT    DECIMAL(16,2),
   GOTONE_PRECHRG_AMT    DECIMAL(16,2),
   IUSR_PRECHRG_AMT    DECIMAL(16,2),
   OTH_AMT    DECIMAL(16,2),
   SELL_AMT    DECIMAL(16,2),
   NEW_AMT    DECIMAL(16,2),
   TOT_AMT    DECIMAL(16,2),
   IUSR_CHRG_AMT    DECIMAL(16,2),
   IBOSS_CHRG_AMT    DECIMAL(16,2),
   BOSS_DG_PRECHRG    DECIMAL(16,2),
   BOSS_SZX_PRECHRG    DECIMAL(16,2),
   OCS_DG_PRECHRG    DECIMAL(16,2),
   OCS_SZX_PRECHRG    DECIMAL(16,2),
   SCP_DG_PRECHRG    DECIMAL(16,2),
   SCP_SZX_PRECHRG    DECIMAL(16,2),
   AIR_CHRG_AMT    DECIMAL(16,2),
   SIM_CRD_AMT    DECIMAL(16,2),
   BAD_BILL_AMT    DECIMAL(16,2),
   CHNL_AMT    DECIMAL(16,2),
   TAX_AMT    DECIMAL(16,2),
   AREA_BUSI_AMT    DECIMAL(16,2),
   SZX_PKGCRD_AMT    DECIMAL(16,2),
   DG_PKGCRD_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_QY_ACCT_BAL_RPT;
CREATE EXTERNAL TABLE NG3.TM_QY_ACCT_BAL_RPT (
   TM_INTRVL_CD    INT,
   CMCC_BRANCH_CD    STRING,
   ACCT_TYP_CD    SMALLINT,
   BRND_CD    SMALLINT,
   OSS_CD    SMALLINT,
   START_AMT    DECIMAL(16,2),
   ROLLBACK_AMT    DECIMAL(16,2),
   INCOME_AMT    DECIMAL(16,2),
   END_AMT    DECIMAL(16,2),
   DIFF_AMT    DECIMAL(16,2),
   GOTONE_PRECHRG_AMT    DECIMAL(16,2)
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='&&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_OPR_ROLE_INF;
CREATE EXTERNAL TABLE NG3.TR_OPR_ROLE_INF (
   OPR_ID    STRING,
   ROLE_ID    STRING,
   STATUS    STRING,
   STATUS_DT    INT,
   STATUS_TIM    STRING,
   CREATE_DT    INT,
   CREATE_TIM    STRING,
   DATA_SOURCE    STRING,
   DATA_DT    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_MRKT_BUSI_GOODS_FEE_RPT_D;
CREATE EXTERNAL TABLE NG3.TM_MRKT_BUSI_GOODS_FEE_RPT_D (
   TM_INTRVL_CD    INT,
   TIME_KEY    BIGINT,
   MANGRA_CD    STRING,
   OPR_EMP_ID    STRING,
   PRDCT_CD    STRING,
   HOST_FLAG    STRING,
   ST_TYP    STRING,
   JOB_LOG_ID    STRING,
   BUSI_TYP    STRING,
   COM_SRC    STRING,
   COM_ID    STRING,
   MARK_PLAN_CD    STRING,
   YS_PRICE    BIGINT,
   SS_PRICE    BIGINT,
   QUANTITY    BIGINT,
   REC_FEE    BIGINT,
   ACT_FEE    BIGINT,
   DISC_FEE    BIGINT,
   CMCC_BRANCH_CD    STRING,
   LOAD_ID    INT
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TM_MRKT_MOB_SELL_RPT_D;
CREATE EXTERNAL TABLE NG3.TM_MRKT_MOB_SELL_RPT_D (
   TM_INTRVL_CD    INT,
   TIME_KEY    INT,
   MANGRA_CD    STRING,
   OPR_ID    STRING,
   MOB_TYP    STRING,
   GOODS_CD    STRING,
   GOODS_SRC    STRING,
   PRDCT_CD    STRING,
   WITHDRAW_TYP    STRING,
   MARK_PLAN_CD    STRING,
   YS_PRICE    DECIMAL(16,2),
   SS_PRICE    DECIMAL(16,2),
   CNT    BIGINT,
   REC_FEE    DECIMAL(16,2),
   SELL_FEE    DECIMAL(16,2),
   CALL_FEE    DECIMAL(16,2),
   CMCC_BRANCH_CD    STRING,
   LOAD_ID    INT
)
PARTITIONED BY (branch STRING,month INT,day INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_CMCC_CENTER;
CREATE EXTERNAL TABLE NG3.TR_CMCC_CENTER (
   CMCC_BRANCH_CD    STRING,
   CMCC_BRANCH_NAM    STRING,
   CENTER_CD    SMALLINT,
   CENTER_NAM    STRING,
   SORT_VAL    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_CMCC_CENTER ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_PRDCT_TYP_YX;
CREATE EXTERNAL TABLE NG3.TR_PRDCT_TYP_YX (
   BASS_PRDCT_CD    STRING,
   PKG_PRDCT_CD    STRING,
   PRDCT_LVL    STRING,
   EFF_TIME    STRING,
   EXP_TIME    STRING,
   PRDCT_TYP    STRING
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_PRDCT_TYP_HW;
CREATE EXTERNAL TABLE NG3.TR_PRDCT_TYP_HW (
   BASS_PRDCT_CD    STRING,
   PKG_PRDCT_CD    STRING,
   PRDCT_LVL    STRING,
   EFF_TIME    STRING,
   EXP_TIME    STRING,
   PRDCT_TYP    STRING,
   MAPPING_ID    STRING
)
PARTITIONED BY (branch STRING,month INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TR_IMEI_TYP;
CREATE EXTERNAL TABLE NG3.TR_IMEI_TYP (
   IMEI_TERM_CD    INT,
   TERM_BRND    STRING,
   TERM_DEVICE_ID    STRING,
   TERM_DEVICE_NAM    STRING,
   NET_FREQ    STRING,
   SCR_REF    STRING,
   AVAILABLE_COLORS    STRING,
   COLOR_DEPTH    STRING,
   FREQ_CD    STRING,
   PRESET_CD    STRING,
   UAPROFILE_FUNC    STRING,
   NET_MODE    STRING,
   RING_TYP    STRING,
   OS_TYP    STRING,
   WAP_FUNC    STRING,
   GPRS_FUNC_IND    STRING,
   DV_FUNC    STRING,
   JAVA_VER    STRING,
   MEM_SIZE    STRING,
   LOC_TRANS_TYP    STRING,
   HANDWRITE_IND    STRING,
   RADIO_FUNC    STRING,
   MMPLAYER_TYP    STRING,
   MMS_FUNC_IND    STRING,
   USSD_FUNC_IND    STRING,
   POC_FUNC_IND    STRING,
   WLAN_FUNC_IND    STRING,
   STREAM_FUNC_IND    STRING,
   IMPS_FUNC_IND    STRING,
   SYNCML_FUNC_IND    STRING,
   MED_FORMT    STRING,
   DRM_FUNC_IND    STRING,
   LOUDHAILER_FUNC_IND    STRING,
   TERM_STYLE    STRING,
   EDGE_FUNC    STRING,
   GPS_FUNC_DESC    STRING,
   MANUFACTURER    STRING,
   TERM_TYP    STRING,
   PERMIT_DT    STRING,
   STOP_PROD_DT    STRING,
   ON_PROD_IND    STRING,
   WORTH_LVL    STRING,
   DATASOURCE_CD    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='\001','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_IMEI_TYP ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TS_ERR_IMEI_TYP;
CREATE EXTERNAL TABLE NG3.TS_ERR_IMEI_TYP (
   TERM_DEVICE_ID    STRING,
   TERM_DEVICE_NAM    STRING,
   TERM_BRND    STRING,
   NET_FREQ    STRING,
   SCR_REF    STRING,
   AVAILABLE_COLORS    STRING,
   COLOR_DEPTH    STRING,
   FREQ_CD    STRING,
   PRESET_CD    STRING,
   UAPROFILE_FUNC    STRING,
   NET_MODE    STRING,
   RING_TYP    STRING,
   OS_TYP    STRING,
   WAP_FUNC    STRING,
   GPRS_FUNC_IND    STRING,
   DV_FUNC    STRING,
   JAVA_VER    STRING,
   MEM_SIZE    STRING,
   LOC_TRANS_TYP    STRING,
   HANDWRITE_IND    STRING,
   RADIO_FUNC    STRING,
   MMPLAYER_TYP    STRING,
   MMS_FUNC_IND    STRING,
   USSD_FUNC_IND    STRING,
   POC_FUNC_IND    STRING,
   WLAN_FUNC_IND    STRING,
   STREAM_FUNC_IND    STRING,
   IMPS_FUNC_IND    STRING,
   SYNCML_FUNC_IND    STRING,
   MED_FORMT    STRING,
   DRM_FUNC_IND    STRING,
   LOUDHAILER_FUNC_IND    STRING,
   TERM_STYLE    STRING,
   EDGE_FUNC    STRING,
   GPS_FUNC_DESC    STRING,
   MANUFACTURER    STRING,
   TERM_TYP    STRING,
   PERMIT_DT    STRING,
   STOP_PROD_DT    STRING,
   ON_PROD_IND    STRING,
   WORTH_LVL    STRING,
   DATASOURCE_CD    INT,
   TM_INTRVL_CD    INT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.MultiDelimitSerDe'
WITH SERDEPROPERTIES ('field.delim'='@#$','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

DROP TABLE IF EXISTS NG3.TT_BUZ_CGI;
CREATE EXTERNAL TABLE NG3.TT_BUZ_CGI (
   CMCC_BRANCH_CD    STRING,
   BUZ_NAM    STRING,
   CELL_CGI    STRING,
   BUZ_TYP    SMALLINT
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'='&','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TT_BUZ_CGI ADD PARTITION (branch='GMCC');

DROP TABLE IF EXISTS NG3.TR_R_ZH_TERM_PRDCT;
CREATE EXTERNAL TABLE NG3.TR_R_ZH_TERM_PRDCT (
   TAC    STRING,
   TERM_BRND_NAM    STRING,
   TERM_MDL_NAM    STRING,
   IF_INTELL    STRING,
   IF_WIFI    STRING,
   IF_FRONT_CAMERA    STRING,
   IF_TD    STRING,
   IF_DUAL_CARD    STRING,
   CAMERA_PIXEL    INT,
   SCREEN_SIZE    DECIMAL(14,4),
   SCREEN_PIEL    INT,
   NETWORK    STRING,
   ROM    STRING,
   RAM    DECIMAL(14,4),
   WEIHT    DECIMAL(14,4),
   BATTERY_CAPACITY    INT,
   PRTCL_PRC    INT,
   PRICE_RANGE    STRING,
   TER_TYPE_NAME    STRING,
   TDLTE_IND    STRING,
   FDLTE_IND    STRING,
   SALE_PATH    STRING,
   IF_NFC    STRING,
   PRODUCT_MODEL    STRING,
   IF_LTE    STRING,
   NEW_PRTCL_PRC    INT,
   NEW_PRICE_RANGE    STRING,
   FRONT_CAMERA_PIXEL    STRING,
   IF_FINGERPRINT    STRING,
   TERM_NET_TYP    STRING,
   MARKET_TIME    INT,
   A4G_TERM    STRING,
   TERM_TYP_CD    STRING
)
PARTITIONED BY (branch STRING)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe'
WITH SERDEPROPERTIES ('field.delim'=',','serialization.null.format' ='NVL','serialization.encoding' ='GBK')
STORED AS TEXTFILE;

ALTER TABLE NG3.TR_R_ZH_TERM_PRDCT ADD PARTITION (branch='GMCC');


